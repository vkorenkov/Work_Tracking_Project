<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:NewWorkTracking"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    xmlns:inter="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:behaviors="clr-namespace:NewWorkTracking.Behavior"
    mc:Ignorable="d">

    <!--#region DatePicker-->
    <Style
        TargetType="{x:Type DatePicker}">
        <Setter
            Property="CalendarStyle"
            Value="{DynamicResource CalendarStyle}" />
        <Setter
            Property="Height"
            Value="25" />
        <Setter
            Property="Foreground"
            Value="#FFFFFF" />
        <Setter
            Property="IsTodayHighlighted"
            Value="True" />
        <Setter
            Property="SelectedDateFormat"
            Value="Short" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="Padding"
            Value="2" />
        <Setter
            Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush
                    EndPoint=".5,0"
                    StartPoint=".5,1">
                    <GradientStop
                        Color="#FFA3AEB9"
                        Offset="0" />
                    <GradientStop
                        Color="#FF8399A9"
                        Offset="0.375" />
                    <GradientStop
                        Color="#FF718597"
                        Offset="0.375" />
                    <GradientStop
                        Color="#FF617584"
                        Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Stretch" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type DatePicker}">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
                                x:Name="CommonStates">
                                <VisualState
                                    x:Name="Normal" />
                                <VisualState
                                    x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Duration="0"
                                            To="1"
                                            Storyboard.TargetProperty="Opacity"
                                            Storyboard.TargetName="PART_DisabledVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid
                            x:Name="PART_Root"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.Resources>
                                <SolidColorBrush
                                    x:Key="DisabledBrush"
                                    Color="#A5FFFFFF" />
                                <ControlTemplate
                                    x:Key="DropDownButtonTemplate"
                                    TargetType="{x:Type Button}">
                                    <Grid
                                        Height="20">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup
                                                x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition
                                                        GeneratedDuration="0" />
                                                    <VisualTransition
                                                        GeneratedDuration="0:0:0.1"
                                                        To="MouseOver" />
                                                    <VisualTransition
                                                        GeneratedDuration="0:0:0.1"
                                                        To="Pressed" />
                                                </VisualStateGroup.Transitions>
                                                <VisualState
                                                    x:Name="Normal" />
                                                <VisualState
                                                    x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation
                                                            Duration="0"
                                                            To="#FF448DCA"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            Storyboard.TargetName="Background" />
                                                        <ColorAnimationUsingKeyFrames
                                                            BeginTime="0"
                                                            Duration="00:00:00.001"
                                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                                                            Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame
                                                                KeyTime="0"
                                                                Value="#7FFFFFFF" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames
                                                            BeginTime="0"
                                                            Duration="00:00:00.001"
                                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                            Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame
                                                                KeyTime="0"
                                                                Value="#CCFFFFFF" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames
                                                            BeginTime="0"
                                                            Duration="00:00:00.001"
                                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                            Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame
                                                                KeyTime="0"
                                                                Value="#F2FFFFFF" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState
                                                    x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames
                                                            BeginTime="0"
                                                            Duration="00:00:00.001"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            Storyboard.TargetName="Background">
                                                            <SplineColorKeyFrame
                                                                KeyTime="0"
                                                                Value="#FF448DCA" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames
                                                            BeginTime="0"
                                                            Duration="00:00:00.001"
                                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                                            Storyboard.TargetName="Highlight">
                                                            <SplineDoubleKeyFrame
                                                                KeyTime="0"
                                                                Value="1" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames
                                                            BeginTime="0"
                                                            Duration="00:00:00.001"
                                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                            Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame
                                                                KeyTime="0"
                                                                Value="#EAFFFFFF" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames
                                                            BeginTime="0"
                                                            Duration="00:00:00.001"
                                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                            Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame
                                                                KeyTime="0"
                                                                Value="#C6FFFFFF" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames
                                                            BeginTime="0"
                                                            Duration="00:00:00.001"
                                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                                                            Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame
                                                                KeyTime="0"
                                                                Value="#6BFFFFFF" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames
                                                            BeginTime="0"
                                                            Duration="00:00:00.001"
                                                            Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                            Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame
                                                                KeyTime="0"
                                                                Value="#F4FFFFFF" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState
                                                    x:Name="Disabled" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid
                                            Background="#11FFFFFF"
                                            FlowDirection="LeftToRight"
                                            HorizontalAlignment="Center"
                                            Height="18"
                                            Margin="0"
                                            VerticalAlignment="Center"
                                            Width="19">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition
                                                    Width="20*" />
                                                <ColumnDefinition
                                                    Width="20*" />
                                                <ColumnDefinition
                                                    Width="20*" />
                                                <ColumnDefinition
                                                    Width="20*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition
                                                    Height="23*" />
                                                <RowDefinition
                                                    Height="19*" />
                                                <RowDefinition
                                                    Height="19*" />
                                                <RowDefinition
                                                    Height="19*" />
                                            </Grid.RowDefinitions>
                                            <Border
                                                x:Name="Highlight"
                                                BorderBrush="#FF45D6FA"
                                                BorderThickness="1"
                                                Grid.ColumnSpan="4"
                                                CornerRadius="0,0,1,1"
                                                Margin="-1"
                                                Opacity="0"
                                                Grid.Row="0"
                                                Grid.RowSpan="4" />
                                            <Border
                                                x:Name="Background"
                                                BorderBrush="#FFFFFFFF"
                                                BorderThickness="1"
                                                Background="#FF1F3B53"
                                                Grid.ColumnSpan="4"
                                                CornerRadius=".5"
                                                Margin="0,-1,0,0"
                                                Opacity="1"
                                                Grid.Row="1"
                                                Grid.RowSpan="3" />
                                            <Border
                                                x:Name="BackgroundGradient"
                                                BorderBrush="#BF000000"
                                                BorderThickness="1"
                                                Grid.ColumnSpan="4"
                                                CornerRadius=".5"
                                                Margin="0,-1,0,0"
                                                Opacity="1"
                                                Grid.Row="1"
                                                Grid.RowSpan="3">
                                                <Border.Background>
                                                    <LinearGradientBrush
                                                        EndPoint=".7,1"
                                                        StartPoint=".7,0">
                                                        <GradientStop
                                                            Color="#FFFFFFFF"
                                                            Offset="0" />
                                                        <GradientStop
                                                            Color="#F9FFFFFF"
                                                            Offset="0.375" />
                                                        <GradientStop
                                                            Color="#E5FFFFFF"
                                                            Offset="0.625" />
                                                        <GradientStop
                                                            Color="#C6FFFFFF"
                                                            Offset="1" />
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Rectangle
                                                Grid.ColumnSpan="4"
                                                Grid.RowSpan="1"
                                                StrokeThickness="1">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush
                                                        EndPoint="0.3,-1.1"
                                                        StartPoint="0.46,1.6">
                                                        <GradientStop
                                                            Color="#FF4084BD" />
                                                        <GradientStop
                                                            Color="#FFAFCFEA"
                                                            Offset="1" />
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush
                                                        EndPoint="0.48,-1"
                                                        StartPoint="0.48,1.25">
                                                        <GradientStop
                                                            Color="#FF494949" />
                                                        <GradientStop
                                                            Color="#FF9F9F9F"
                                                            Offset="1" />
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                            </Rectangle>
                                            <Path
                                                Grid.ColumnSpan="4"
                                                Grid.Column="0"
                                                Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z"
                                                Fill="#FF2F2F2F"
                                                HorizontalAlignment="Center"
                                                Margin="4,3,4,3"
                                                Grid.Row="1"
                                                Grid.RowSpan="3"
                                                RenderTransformOrigin="0.5,0.5"
                                                Stretch="Fill"
                                                VerticalAlignment="Center" />
                                            <Ellipse
                                                Grid.ColumnSpan="4"
                                                Fill="#FFFFFFFF"
                                                HorizontalAlignment="Center"
                                                Height="3"
                                                StrokeThickness="0"
                                                VerticalAlignment="Center"
                                                Width="3" />
                                            <Border
                                                x:Name="DisabledVisual"
                                                BorderBrush="#B2FFFFFF"
                                                BorderThickness="1"
                                                Grid.ColumnSpan="4"
                                                CornerRadius="0,0,.5,.5"
                                                Opacity="0"
                                                Grid.Row="0"
                                                Grid.RowSpan="4" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition
                                    Width="Auto"
                                    MinWidth="25" />
                            </Grid.ColumnDefinitions>
                            <Button
                                x:Name="PART_Button"
                                Grid.Column="1"
                                Foreground="{TemplateBinding Foreground}"
                                Focusable="False"
                                HorizontalAlignment="Left"
                                Margin="3,0,0,0"
                                Grid.Row="0"
                                Template="{StaticResource DropDownButtonTemplate}"
                                VerticalAlignment="Top"
                                Width="20"
                                Height="19" />
                            <DatePickerTextBox
                                x:Name="PART_TextBox"
                                Grid.Column="0"
                                Focusable="{TemplateBinding Focusable}"
                                HorizontalContentAlignment="Stretch"
                                Grid.Row="0"
                                VerticalContentAlignment="Stretch"
                                Foreground="#FFFBFBFB"
                                SelectionBrush="Goldenrod" />
                            <Grid
                                x:Name="PART_DisabledVisual"
                                Grid.ColumnSpan="2"
                                Grid.Column="0"
                                IsHitTestVisible="False"
                                Opacity="0"
                                Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        Width="*" />
                                    <ColumnDefinition
                                        Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle
                                    Grid.Column="0"
                                    Fill="#A5FFFFFF"
                                    RadiusY="1"
                                    Grid.Row="0"
                                    RadiusX="1" />
                                <Rectangle
                                    Grid.Column="1"
                                    Fill="#A5FFFFFF"
                                    Height="18"
                                    Margin="3,0,3,0"
                                    RadiusY="1"
                                    Grid.Row="0"
                                    RadiusX="1"
                                    Width="19" />
                                <Popup
                                    x:Name="PART_Popup"
                                    AllowsTransparency="True"
                                    Placement="Bottom"
                                    PlacementTarget="{Binding ElementName=PART_TextBox}"
                                    StaysOpen="False" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger
                            Binding="{Binding Source={x:Static SystemParameters.HighContrast}}"
                            Value="false">
                            <Setter
                                Property="Foreground"
                                TargetName="PART_TextBox"
                                Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        TargetType="{x:Type DatePickerTextBox}">
        <Setter
            Property="Foreground"
            Value="White" />
        <Setter
            Property="Background"
            Value="#FF1D1D1D" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="VerticalFirst" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type DatePickerTextBox}">
                    <Grid>
                        <Grid.Resources>
                            <SolidColorBrush
                                x:Key="WatermarkBrush"
                                Color="#FFAAAAAA" />
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
                                x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition
                                        GeneratedDuration="0" />
                                    <VisualTransition
                                        GeneratedDuration="0:0:0.1"
                                        To="MouseOver" />
                                </VisualStateGroup.Transitions>
                                <VisualState
                                    x:Name="Normal" />
                                <VisualState
                                    x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation
                                            Duration="0"
                                            To="#FF99C1E2"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="watermark_decorator" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup
                                x:Name="WatermarkStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition
                                        GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState
                                    x:Name="Unwatermarked" />
                                <VisualState
                                    x:Name="Watermarked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Duration="0"
                                            To="0"
                                            Storyboard.TargetProperty="Opacity"
                                            Storyboard.TargetName="ContentElement" />
                                        <DoubleAnimation
                                            Duration="0"
                                            To="1"
                                            Storyboard.TargetProperty="Opacity"
                                            Storyboard.TargetName="PART_Watermark" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup
                                x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition
                                        GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState
                                    x:Name="Unfocused" />
                                <VisualState
                                    x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Duration="0"
                                            To="1"
                                            Storyboard.TargetProperty="Opacity"
                                            Storyboard.TargetName="FocusVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                            x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="1"
                            Opacity="1"
                            Padding="{TemplateBinding Padding}">
                            <Grid
                                x:Name="WatermarkContent"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Border
                                    x:Name="ContentElement"
                                    BorderBrush="{DynamicResource GoldenBrush}"
                                    BorderThickness="1" />
                                <Border
                                    x:Name="watermark_decorator"
                                    BorderBrush="#FF1D1D1D"
                                    BorderThickness="1">
                                    <ContentControl
                                        x:Name="PART_Watermark"
                                        Focusable="False"
                                        IsHitTestVisible="False"
                                        Opacity="0"
                                        Padding="2" />
                                </Border>
                                <ScrollViewer
                                    x:Name="PART_ContentHost"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Margin="0"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <Border
                                    x:Name="FocusVisual"
                                    BorderBrush="Goldenrod"
                                    CornerRadius="1"
                                    IsHitTestVisible="False"
                                    Opacity="0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="CalendarStyle"
        TargetType="{x:Type Calendar}">
        <Setter
            Property="Foreground"
            Value="#FFFFFF" />
        <Setter
            Property="Background"
            Value="{StaticResource DarkBrush}" />
        <Setter
            Property="BorderBrush"
            Value="#1d1d1d" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Calendar}">
                    <StackPanel
                        x:Name="PART_Root"
                        HorizontalAlignment="Center">
                        <CalendarItem
                            x:Name="PART_CalendarItem"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="#1d1d1d" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        TargetType="{x:Type CalendarItem}">
        <Setter
            Property="Margin"
            Value="0,3,0,3" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate
                            x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock
                                Foreground="#FF333333"
                                FontWeight="Bold"
                                FontSize="9.5"
                                FontFamily="Verdana"
                                HorizontalAlignment="Center"
                                Margin="0,6,0,6"
                                Text="{Binding}"
                                VerticalAlignment="Center" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid
                        x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush
                                x:Key="DisabledColor"
                                Color="#A5FFFFFF" />
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
                                x:Name="CommonStates">
                                <VisualState
                                    x:Name="Normal" />
                                <VisualState
                                    x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Duration="0"
                                            To="1"
                                            Storyboard.TargetProperty="Opacity"
                                            Storyboard.TargetName="PART_DisabledVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="1">
                            <Border
                                BorderBrush="#FFFFFFFF"
                                BorderThickness="2"
                                CornerRadius="1">
                                <Grid>
                                    <Grid.Resources>
                                        <ControlTemplate
                                            x:Key="PreviousButtonTemplate"
                                            TargetType="{x:Type Button}">
                                            <Grid
                                                Cursor="Hand">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup
                                                        x:Name="CommonStates">
                                                        <VisualState
                                                            x:Name="Normal" />
                                                        <VisualState
                                                            x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Duration="0"
                                                                    To="#FF73A9D8"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                    Storyboard.TargetName="path" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState
                                                            x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Duration="0"
                                                                    To=".5"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                                                    Storyboard.TargetName="path" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle
                                                    Fill="#11E5EBF1"
                                                    Opacity="1"
                                                    Stretch="Fill" />
                                                <Grid>
                                                    <Path
                                                        x:Name="path"
                                                        Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                                                        Fill="#FF333333"
                                                        HorizontalAlignment="Left"
                                                        Height="10"
                                                        Margin="14,-6,0,0"
                                                        Stretch="Fill"
                                                        VerticalAlignment="Center"
                                                        Width="6" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate
                                            x:Key="NextButtonTemplate"
                                            TargetType="{x:Type Button}">
                                            <Grid
                                                Cursor="Hand">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup
                                                        x:Name="CommonStates">
                                                        <VisualState
                                                            x:Name="Normal" />
                                                        <VisualState
                                                            x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Duration="0"
                                                                    To="#FF73A9D8"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                    Storyboard.TargetName="path" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState
                                                            x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Duration="0"
                                                                    To=".5"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                                                    Storyboard.TargetName="path" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle
                                                    Fill="#11E5EBF1"
                                                    Opacity="1"
                                                    Stretch="Fill" />
                                                <Grid>
                                                    <Path
                                                        x:Name="path"
                                                        Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                                                        Fill="#FF333333"
                                                        HorizontalAlignment="Right"
                                                        Height="10"
                                                        Margin="0,-6,14,0"
                                                        Stretch="Fill"
                                                        VerticalAlignment="Center"
                                                        Width="6" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate
                                            x:Key="HeaderButtonTemplate"
                                            TargetType="{x:Type Button}">
                                            <Grid
                                                Cursor="Hand">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup
                                                        x:Name="CommonStates">
                                                        <VisualState
                                                            x:Name="Normal" />
                                                        <VisualState
                                                            x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Duration="0"
                                                                    To="#FF73A9D8"
                                                                    Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                    Storyboard.TargetName="buttonContent" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState
                                                            x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Duration="0"
                                                                    To=".5"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    Storyboard.TargetName="buttonContent" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <ContentPresenter
                                                    x:Name="buttonContent"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    Content="{TemplateBinding Content}"
                                                    TextElement.Foreground="#FF333333"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    Margin="1,4,1,9"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition
                                            Width="Auto" />
                                        <ColumnDefinition
                                            Width="Auto" />
                                        <ColumnDefinition
                                            Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition
                                            Height="Auto" />
                                        <RowDefinition
                                            Height="*" />
                                    </Grid.RowDefinitions>
                                    <Button
                                        x:Name="PART_PreviousButton"
                                        Grid.Column="0"
                                        Focusable="False"
                                        HorizontalAlignment="Left"
                                        Height="20"
                                        Grid.Row="0"
                                        Template="{StaticResource PreviousButtonTemplate}"
                                        Width="28"
                                        Background="#FF1D1D1D" />
                                    <Button
                                        x:Name="PART_HeaderButton"
                                        Grid.Column="1"
                                        FontWeight="Bold"
                                        Focusable="False"
                                        FontSize="10.5"
                                        HorizontalAlignment="Center"
                                        Grid.Row="0"
                                        Template="{StaticResource HeaderButtonTemplate}"
                                        VerticalAlignment="Center"
                                        Background="#FF1D1D1D" />
                                    <Button
                                        x:Name="PART_NextButton"
                                        Grid.Column="2"
                                        Focusable="False"
                                        HorizontalAlignment="Right"
                                        Height="20"
                                        Grid.Row="0"
                                        Template="{StaticResource NextButtonTemplate}"
                                        Width="28"
                                        Background="#FF1D1D1D"
                                        Foreground="White" />
                                    <Grid
                                        x:Name="PART_MonthView"
                                        Grid.ColumnSpan="3"
                                        HorizontalAlignment="Center"
                                        Margin="6,-1,6,6"
                                        Grid.Row="1"
                                        Visibility="Visible"
                                        Background="#FF1D1D1D">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition
                                                Width="Auto" />
                                            <ColumnDefinition
                                                Width="Auto" />
                                            <ColumnDefinition
                                                Width="Auto" />
                                            <ColumnDefinition
                                                Width="Auto" />
                                            <ColumnDefinition
                                                Width="Auto" />
                                            <ColumnDefinition
                                                Width="Auto" />
                                            <ColumnDefinition
                                                Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition
                                                Height="Auto" />
                                            <RowDefinition
                                                Height="Auto" />
                                            <RowDefinition
                                                Height="Auto" />
                                            <RowDefinition
                                                Height="Auto" />
                                            <RowDefinition
                                                Height="Auto" />
                                            <RowDefinition
                                                Height="Auto" />
                                            <RowDefinition
                                                Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid
                                        x:Name="PART_YearView"
                                        Grid.ColumnSpan="3"
                                        HorizontalAlignment="Center"
                                        Margin="6,-3,7,6"
                                        Grid.Row="1"
                                        Visibility="Hidden">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition
                                                Width="Auto" />
                                            <ColumnDefinition
                                                Width="Auto" />
                                            <ColumnDefinition
                                                Width="Auto" />
                                            <ColumnDefinition
                                                Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition
                                                Height="Auto" />
                                            <RowDefinition
                                                Height="Auto" />
                                            <RowDefinition
                                                Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                        <Rectangle
                            x:Name="PART_DisabledVisual"
                            Fill="{StaticResource DisabledColor}"
                            Opacity="0"
                            RadiusY="2"
                            RadiusX="2"
                            Stretch="Fill"
                            Stroke="{StaticResource DisabledColor}"
                            StrokeThickness="1"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="Visibility"
                                TargetName="PART_DisabledVisual"
                                Value="Visible" />
                        </Trigger>
                        <DataTrigger
                            Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
                            Value="Year">
                            <Setter
                                Property="Visibility"
                                TargetName="PART_MonthView"
                                Value="Hidden" />
                            <Setter
                                Property="Visibility"
                                TargetName="PART_YearView"
                                Value="Visible" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
                            Value="Decade">
                            <Setter
                                Property="Visibility"
                                TargetName="PART_MonthView"
                                Value="Hidden" />
                            <Setter
                                Property="Visibility"
                                TargetName="PART_YearView"
                                Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion DatePicker-->

    <!--#region TextBlock-->
    <Style
        TargetType="{x:Type TextBlock}">
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="TextTrimming"
            Value="WordEllipsis" />
        <Setter
            Property="Foreground"
            Value="White" />
    </Style>
    <!--#endregion TextBlock-->

    <!--#region TextBlock-->
    <Style
        TargetType="{x:Type TextBlock}"
        x:Key="Wrap">
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="TextTrimming"
            Value="WordEllipsis" />
        <!--<Style.Triggers>
            <DataTrigger
                Binding="{Binding NoActive}"
                Value="Активно">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource WhiteBrush}" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding NoActive}"
                Value="Архив">
                <Setter
                    Property="Foreground"
                    Value="Red" />
                <Setter
                    Property="Background"
                    Value="{StaticResource DarkBrush}" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding NoActive}"
                Value="Необходимо заполнить номер списания">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource OrangeBrush}" />
                <Setter
                    Property="Background"
                    Value="{StaticResource DarkBrush}" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding NoActive}"
                Value="Списано">
                <Setter
                    Property="Foreground"
                    Value="{StaticResource LightBlue}" />
                <Setter
                    Property="Background"
                    Value="{StaticResource DarkBrush}" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding NoActive}"
                Value="Модернизировано">
                <Setter
                    Property="Foreground"
                    Value="Green" />
            </DataTrigger>
        </Style.Triggers>-->
    </Style>
    <!--#endregion TextBlock-->

    <!--#region TextBox-->
    <SolidColorBrush
        x:Key="TextBox.Static.Border"
        Color="#FFABAdB3" />
    <SolidColorBrush
        x:Key="TextBox.MouseOver.Border"
        Color="Goldenrod" />
    <SolidColorBrush
        x:Key="TextBox.Focus.Border"
        Color="Goldenrod" />
    <Style
        TargetType="{x:Type TextBox}">
        <Setter
            Property="SelectionBrush"
            Value="DarkGoldenrod" />
        <Setter
            Property="CaretBrush"
            Value="#FFFFFF" />
        <Setter
            Property="Background"
            Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource TextBox.Static.Border}" />
        <Setter
            Property="Foreground"
            Value="#FFFFFF" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="KeyboardNavigation.TabNavigation"
            Value="None" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Left" />
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="AllowDrop"
            Value="true" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="VerticalFirst" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="TextWrapping"
            Value="Wrap" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"
                            Background="#FF1D1D1D"
                            Foreground="White" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Opacity"
                                TargetName="border"
                                Value="0.56" />
                        </Trigger>
                        <Trigger
                            Property="IsMouseOver"
                            Value="true">
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource TextBox.MouseOver.Border}" />
                        </Trigger>
                        <Trigger
                            Property="IsKeyboardFocused"
                            Value="true">
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource TextBox.Focus.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="IsInactiveSelectionHighlightEnabled"
                        Value="true" />
                    <Condition
                        Property="IsSelectionActive"
                        Value="false" />
                </MultiTrigger.Conditions>
                <Setter
                    Property="SelectionBrush"
                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion TExtBox-->

    <!--#region CheckBox-->
    <SolidColorBrush
        x:Key="OptionMark.Static.Background"
        Color="#1d1d1d" />
    <SolidColorBrush
        x:Key="OptionMark.Static.Border"
        Color="#FF707070" />
    <Style
        x:Key="OptionMarkFocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeThickness="1"
                        StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush
        x:Key="OptionMark.MouseOver.Background"
        Color="Black" />
    <SolidColorBrush
        x:Key="OptionMark.MouseOver.Border"
        Color="White" />
    <SolidColorBrush
        x:Key="OptionMark.MouseOver.Glyph"
        Color="White" />
    <SolidColorBrush
        x:Key="OptionMark.Disabled.Background"
        Color="#FFE6E6E6" />
    <SolidColorBrush
        x:Key="OptionMark.Disabled.Border"
        Color="#FFBCBCBC" />
    <SolidColorBrush
        x:Key="OptionMark.Disabled.Glyph"
        Color="#FF707070" />
    <SolidColorBrush
        x:Key="OptionMark.Pressed.Background"
        Color="Black" />
    <SolidColorBrush
        x:Key="OptionMark.Pressed.Border"
        Color="White" />
    <SolidColorBrush
        x:Key="OptionMark.Pressed.Glyph"
        Color="Wheat" />
    <SolidColorBrush
        x:Key="OptionMark.Static.Glyph"
        Color="White" />
    <Style
        TargetType="{x:Type CheckBox}">
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource FocusVisual}" />
        <Setter
            Property="Background"
            Value="{StaticResource OptionMark.Static.Background}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource OptionMark.Static.Border}" />
        <Setter
            Property="Foreground"
            Value="White" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="Auto" />
                            <ColumnDefinition
                                Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="checkBoxBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="1"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid
                                x:Name="markGrid">
                                <Path
                                    x:Name="optionMark"
                                    Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                    Fill="White"
                                    Margin="1"
                                    Opacity="0"
                                    Stretch="None" />
                                <Rectangle
                                    x:Name="indeterminateMark"
                                    Fill="#FF212121"
                                    Margin="2"
                                    Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="HasContent"
                            Value="true">
                            <Setter
                                Property="FocusVisualStyle"
                                Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter
                                Property="Padding"
                                Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger
                            Property="IsMouseOver"
                            Value="true">
                            <Setter
                                Property="Background"
                                TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.MouseOver.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.MouseOver.Border}" />
                            <Setter
                                Property="Fill"
                                TargetName="optionMark"
                                Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                            <Setter
                                Property="Fill"
                                TargetName="indeterminateMark"
                                Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                        </Trigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Background"
                                TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.Disabled.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.Disabled.Border}" />
                            <Setter
                                Property="Fill"
                                TargetName="optionMark"
                                Value="{StaticResource OptionMark.Disabled.Glyph}" />
                            <Setter
                                Property="Fill"
                                TargetName="indeterminateMark"
                                Value="{StaticResource OptionMark.Disabled.Glyph}" />
                        </Trigger>
                        <Trigger
                            Property="IsPressed"
                            Value="true">
                            <Setter
                                Property="Background"
                                TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.Pressed.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.Pressed.Border}" />
                            <Setter
                                Property="Fill"
                                TargetName="optionMark"
                                Value="{StaticResource OptionMark.Pressed.Glyph}" />
                            <Setter
                                Property="Fill"
                                TargetName="indeterminateMark"
                                Value="{StaticResource OptionMark.Pressed.Glyph}" />
                        </Trigger>
                        <Trigger
                            Property="IsChecked"
                            Value="true">
                            <Setter
                                Property="Opacity"
                                TargetName="optionMark"
                                Value="1" />
                            <Setter
                                Property="Opacity"
                                TargetName="indeterminateMark"
                                Value="0" />
                        </Trigger>
                        <Trigger
                            Property="IsChecked"
                            Value="{x:Null}">
                            <Setter
                                Property="Opacity"
                                TargetName="optionMark"
                                Value="0" />
                            <Setter
                                Property="Opacity"
                                TargetName="indeterminateMark"
                                Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Button-->
    <SolidColorBrush
        x:Key="Button.Static.Background"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="Button.Static.Border"
        Color="White" />
    <SolidColorBrush
        x:Key="Button.MouseOver.Background"
        Color="Goldenrod" />
    <SolidColorBrush
        x:Key="Button.MouseOver.Border"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="Button.Pressed.Background"
        Color="DarkGoldenrod" />
    <SolidColorBrush
        x:Key="Button.Pressed.Border"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="Button.Disabled.Background"
        Color="#FFBFBFBF" />
    <SolidColorBrush
        x:Key="Button.Disabled.Border"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="Button.Disabled.Foreground"
        Color="#FF838383" />
    <Style
        TargetType="{x:Type Button}">
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource FocusVisual}" />
        <Setter
            Property="Background"
            Value="{StaticResource Button.Static.Background}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource Button.Static.Border}" />
        <Setter
            Property="Foreground"
            Value="White" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="Padding"
            Value="1" />
        <Setter
            Property="Width"
            Value="100" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="true"
                        CornerRadius="3">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsDefaulted"
                            Value="true">
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <EventTrigger
                            RoutedEvent="MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)">
                                            <LinearColorKeyFrame
                                                KeyTime="0:0:0.3"
                                                Value="Goldenrod" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger
                            RoutedEvent="MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)">
                                            <LinearColorKeyFrame
                                                KeyTime="0:0:0.3"
                                                Value="Transparent" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <!--<Trigger
                            Property="IsMouseOver"
                            Value="true">
                            <Setter
                                Property="Background"
                                TargetName="border"
                                Value="{StaticResource Button.MouseOver.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource Button.MouseOver.Border}" />
                        </Trigger>-->
                        <Trigger
                            Property="IsPressed"
                            Value="true">
                            <Setter
                                Property="Background"
                                TargetName="border"
                                Value="{StaticResource Button.Pressed.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Background"
                                TargetName="border"
                                Value="{StaticResource Button.Disabled.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource Button.Disabled.Border}" />
                            <Setter
                                Property="TextElement.Foreground"
                                TargetName="contentPresenter"
                                Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#endregion-->

    <!--#region MenuButtonStyle-->
    <Style
        x:Key="MenuButton"
        TargetType="{x:Type Button}">
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource FocusVisual}" />
        <Setter
            Property="Background"
            Value="{StaticResource Button.Static.Background}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource Button.Static.Border}" />
        <Setter
            Property="Foreground"
            Value="White" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="Width"
            Value="40" />
        <Setter
            Property="Height"
            Value="40" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger
                            RoutedEvent="MouseLeftButtonUp">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)">
                                            <LinearColorKeyFrame
                                                KeyTime="0:0:0.2"
                                                Value="#1d1d1d" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <Trigger
                            Property="IsDefaulted"
                            Value="true">
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger
                            Property="IsMouseOver"
                            Value="true">
                            <Setter
                                Property="Background"
                                TargetName="border"
                                Value="{StaticResource Button.MouseOver.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource Button.MouseOver.Border}" />
                        </Trigger>
                        <Trigger
                            Property="IsPressed"
                            Value="true">
                            <Setter
                                Property="Background"
                                TargetName="border"
                                Value="{StaticResource Button.Pressed.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Background"
                                TargetName="border"
                                Value="{StaticResource Button.Disabled.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource Button.Disabled.Border}" />
                            <Setter
                                Property="TextElement.Foreground"
                                TargetName="contentPresenter"
                                Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion MenuButtonStyle-->

    <!--#region ComboBox-->
    <Style
        x:Key="FocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        StrokeDashArray="1 2"
                        StrokeThickness="1"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        SnapsToDevicePixels="true"
                        Margin="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush
        x:Key="ComboBox.Static.Background"
        EndPoint="0,1"
        StartPoint="0,0">
        <GradientStop
            Color="#1d1d1d"
            Offset="0.0" />
        <GradientStop
            Color="#1d1d1d"
            Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="ComboBox.Static.Border"
        Color="#FFACACAC" />
    <SolidColorBrush
        x:Key="ComboBox.Static.Editable.Background"
        Color="#1d1d1d" />
    <SolidColorBrush
        x:Key="ComboBox.Static.Editable.Border"
        Color="#FFABADB3" />
    <SolidColorBrush
        x:Key="ComboBox.Static.Editable.Button.Background"
        Color="#373737" />
    <SolidColorBrush
        x:Key="ComboBox.Static.Editable.Button.Border"
        Color="#373737" />
    <SolidColorBrush
        x:Key="ComboBox.MouseOver.Glyph"
        Color="Goldenrod" />
    <LinearGradientBrush
        x:Key="ComboBox.MouseOver.Background"
        EndPoint="0,1"
        StartPoint="0,0">
        <GradientStop
            Color="#1d1d1d"
            Offset="0.0" />
        <GradientStop
            Color="#1d1d1d"
            Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="ComboBox.MouseOver.Border"
        Color="Goldenrod" />
    <SolidColorBrush
        x:Key="ComboBox.MouseOver.Editable.Background"
        Color="#1d1d1d" />
    <SolidColorBrush
        x:Key="ComboBox.MouseOver.Editable.Border"
        Color="Goldenrod" />
    <LinearGradientBrush
        x:Key="ComboBox.MouseOver.Editable.Button.Background"
        EndPoint="0,1"
        StartPoint="0,0">
        <GradientStop
            Color="#373737"
            Offset="0.0" />
        <GradientStop
            Color="#373737"
            Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="ComboBox.MouseOver.Editable.Button.Border"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="ComboBox.Pressed.Glyph"
        Color="Goldenrod" />
    <LinearGradientBrush
        x:Key="ComboBox.Pressed.Background"
        EndPoint="0,1"
        StartPoint="0,0">
        <GradientStop
            Color="#1d1d1d"
            Offset="0.0" />
        <GradientStop
            Color="#1d1d1d"
            Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="ComboBox.Pressed.Border"
        Color="Goldenrod" />
    <SolidColorBrush
        x:Key="ComboBox.Pressed.Editable.Background"
        Color="#1d1d1d" />
    <SolidColorBrush
        x:Key="ComboBox.Pressed.Editable.Border"
        Color="Goldenrod" />
    <LinearGradientBrush
        x:Key="ComboBox.Pressed.Editable.Button.Background"
        EndPoint="0,1"
        StartPoint="0,0">
        <GradientStop
            Color="#373737"
            Offset="0.0" />
        <GradientStop
            Color="#1d1d1d"
            Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush
        x:Key="ComboBox.Pressed.Editable.Button.Border"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="ComboBox.Disabled.Glyph"
        Color="#FFBFBFBF" />
    <SolidColorBrush
        x:Key="ComboBox.Disabled.Background"
        Color="#FFF0F0F0" />
    <SolidColorBrush
        x:Key="ComboBox.Disabled.Border"
        Color="#FFD9D9D9" />
    <SolidColorBrush
        x:Key="ComboBox.Disabled.Editable.Background"
        Color="#FFFFFFFF" />
    <SolidColorBrush
        x:Key="ComboBox.Disabled.Editable.Border"
        Color="#FFBFBFBF" />
    <SolidColorBrush
        x:Key="ComboBox.Disabled.Editable.Button.Background"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="ComboBox.Disabled.Editable.Button.Border"
        Color="Transparent" />
    <SolidColorBrush
        x:Key="ComboBox.Static.Glyph"
        Color="#FF606060" />
    <Style
        x:Key="ComboBoxToggleButton"
        TargetType="{x:Type ToggleButton}">
        <Setter
            Property="OverridesDefaultStyle"
            Value="true" />
        <Setter
            Property="IsTabStop"
            Value="false" />
        <Setter
            Property="Focusable"
            Value="false" />
        <Setter
            Property="ClickMode"
            Value="Press" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="templateRoot"
                        SnapsToDevicePixels="true"
                        Background="#FF1D1D1D"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{StaticResource ComboBox.Static.Border}">
                        <Border
                            x:Name="splitBorder"
                            Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                            SnapsToDevicePixels="true"
                            Margin="0"
                            HorizontalAlignment="Right"
                            BorderThickness="1"
                            BorderBrush="#FFD69118"
                            Background="#FF1D1D1D">
                            <Path
                                x:Name="arrow"
                                VerticalAlignment="Center"
                                Margin="0"
                                HorizontalAlignment="Center"
                                Fill="#FFD69118"
                                Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                    Value="false" />
                                <Condition
                                    Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                    Value="false" />
                                <Condition
                                    Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Static.Editable.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Static.Editable.Border}" />
                            <Setter
                                Property="Background"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger
                            Property="IsMouseOver"
                            Value="true">
                            <Setter
                                Property="Fill"
                                TargetName="arrow"
                                Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.MouseOver.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.MouseOver.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                            <Setter
                                Property="Background"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger
                            Property="IsPressed"
                            Value="true">
                            <Setter
                                Property="Fill"
                                TargetName="arrow"
                                Value="{StaticResource ComboBox.Pressed.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Pressed.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Pressed.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                    Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                            <Setter
                                Property="Background"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Fill"
                                TargetName="arrow"
                                Value="{StaticResource ComboBox.Disabled.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                    Value="false" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Disabled.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Disabled.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                    Value="false" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter
                                Property="Background"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="templateRoot"
                                Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                            <Setter
                                Property="Background"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="splitBorder"
                                Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate
        x:Key="ComboBoxTemplate"
        TargetType="{x:Type ComboBox}">
        <Grid
            x:Name="templateRoot"
            SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                    Width="0" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="true"
                Grid.ColumnSpan="2"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Margin="1"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                Placement="Bottom">
                <Themes:SystemDropShadowChrome
                    x:Name="shadow"
                    Color="Transparent"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <Border
                        x:Name="dropDownBorder"
                        BorderBrush="#FF1D1D1D"
                        BorderThickness="1"
                        Background="#FF1D1D1D">
                        <ScrollViewer
                            x:Name="DropDownScrollViewer"
                            Foreground="White">
                            <Grid
                                x:Name="grid"
                                RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    HorizontalAlignment="Left"
                                    Height="0"
                                    VerticalAlignment="Top"
                                    Width="0">
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Fill="{Binding Background, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                Grid.ColumnSpan="2"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter
                x:Name="contentPresenter"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                IsHitTestVisible="false"
                Margin="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="HasDropShadow"
                SourceName="PART_Popup"
                Value="true">
                <Setter
                    Property="Margin"
                    TargetName="shadow"
                    Value="0,0,5,5" />
                <Setter
                    Property="Color"
                    TargetName="shadow"
                    Value="#71000000" />
            </Trigger>
            <Trigger
                Property="HasItems"
                Value="false">
                <Setter
                    Property="Height"
                    TargetName="dropDownBorder"
                    Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="IsGrouping"
                        Value="true" />
                    <Condition
                        Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                        Value="false" />
                </MultiTrigger.Conditions>
                <Setter
                    Property="ScrollViewer.CanContentScroll"
                    Value="false" />
            </MultiTrigger>
            <Trigger
                Property="ScrollViewer.CanContentScroll"
                SourceName="DropDownScrollViewer"
                Value="false">
                <Setter
                    Property="Canvas.Top"
                    TargetName="opaqueRect"
                    Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter
                    Property="Canvas.Left"
                    TargetName="opaqueRect"
                    Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush
        x:Key="TextBox.Static.Background"
        Color="#1d1d1d" />
    <Style
        x:Key="ComboBoxEditableTextBox"
        TargetType="{x:Type TextBox}">
        <Setter
            Property="SelectionBrush"
            Value="DarkGoldenrod" />
        <Setter
            Property="CaretBrush"
            Value="#FFFFFF" />
        <Setter
            Property="Foreground"
            Value="#FFFFFF" />
        <Setter
            Property="OverridesDefaultStyle"
            Value="true" />
        <Setter
            Property="AllowDrop"
            Value="true" />
        <Setter
            Property="MinWidth"
            Value="0" />
        <Setter
            Property="MinHeight"
            Value="0" />
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="VerticalFirst" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type TextBox}">
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Background="Transparent"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate
        x:Key="ComboBoxEditableTemplate"
        TargetType="{x:Type ComboBox}">
        <Grid
            x:Name="templateRoot"
            SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                    Width="0" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="true"
                Grid.ColumnSpan="2"
                IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                Placement="Bottom">
                <Themes:SystemDropShadowChrome
                    x:Name="shadow"
                    Color="Transparent"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <Border
                        x:Name="dropDownBorder"
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                        BorderThickness="1"
                        Background="#FF1D1D1D">
                        <ScrollViewer
                            x:Name="DropDownScrollViewer">
                            <Grid
                                x:Name="grid"
                                RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    HorizontalAlignment="Left"
                                    Height="0"
                                    VerticalAlignment="Top"
                                    Width="0">
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Fill="{Binding Background, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Themes:SystemDropShadowChrome>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                Grid.ColumnSpan="2"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ComboBoxToggleButton}" />
            <Border
                x:Name="border"
                Background="{StaticResource TextBox.Static.Background}"
                Margin="{TemplateBinding BorderThickness}">
                <TextBox
                    x:Name="PART_EditableTextBox"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                    Margin="{TemplateBinding Padding}"
                    Style="{StaticResource ComboBoxEditableTextBox}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger
                Property="IsEnabled"
                Value="false">
                <Setter
                    Property="Opacity"
                    TargetName="border"
                    Value="0.56" />
            </Trigger>
            <Trigger
                Property="IsKeyboardFocusWithin"
                Value="true">
                <Setter
                    Property="Foreground"
                    Value="Black" />
            </Trigger>
            <Trigger
                Property="HasDropShadow"
                SourceName="PART_Popup"
                Value="true">
                <Setter
                    Property="Margin"
                    TargetName="shadow"
                    Value="0,0,5,5" />
                <Setter
                    Property="Color"
                    TargetName="shadow"
                    Value="#71000000" />
            </Trigger>
            <Trigger
                Property="HasItems"
                Value="false">
                <Setter
                    Property="Height"
                    TargetName="dropDownBorder"
                    Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="IsGrouping"
                        Value="true" />
                    <Condition
                        Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                        Value="false" />
                </MultiTrigger.Conditions>
                <Setter
                    Property="ScrollViewer.CanContentScroll"
                    Value="false" />
            </MultiTrigger>
            <Trigger
                Property="ScrollViewer.CanContentScroll"
                SourceName="DropDownScrollViewer"
                Value="false">
                <Setter
                    Property="Canvas.Top"
                    TargetName="opaqueRect"
                    Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter
                    Property="Canvas.Left"
                    TargetName="opaqueRect"
                    Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style
        TargetType="{x:Type ComboBox}">
        <Setter
            Property="IsEditable"
            Value="True" />
        <Setter
            Property="IsTextSearchEnabled"
            Value="False" />
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource FocusVisual}" />
        <Setter
            Property="Background"
            Value="{StaticResource ComboBox.Static.Background}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource ComboBox.Static.Border}" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="Padding"
            Value="6,3,5,3" />
        <Setter
            Property="ScrollViewer.CanContentScroll"
            Value="true" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="Both" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="Template"
            Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger
                Property="IsEditable"
                Value="true">
                <Setter
                    Property="IsTabStop"
                    Value="false" />
                <Setter
                    Property="Padding"
                    Value="2" />
                <Setter
                    Property="Template"
                    Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion ComboBox-->

    <!--#region DataGrid-->
    <Style
        TargetType="{x:Type DataGrid}">
        <Setter
            Property="Background"
            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter
            Property="BorderBrush"
            Value="#FFFFFF" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="RowDetailsVisibilityMode"
            Value="VisibleWhenSelected" />
        <Setter
            Property="ScrollViewer.CanContentScroll"
            Value="true" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="Both" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type DataGrid}">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="DG_ScrollViewer"
                            Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate
                                    TargetType="{x:Type ScrollViewer}">
                                    <Grid
                                        Background="#FF1D1D1D">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition
                                                Width="Auto" />
                                            <ColumnDefinition
                                                Width="*" />
                                            <ColumnDefinition
                                                Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition
                                                Height="Auto" />
                                            <RowDefinition
                                                Height="*" />
                                            <RowDefinition
                                                Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button
                                            Command="{x:Static DataGrid.SelectAllCommand}"
                                            Focusable="false"
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter
                                            x:Name="PART_ColumnHeadersPresenter"
                                            Grid.Column="1"
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <ScrollContentPresenter
                                            x:Name="PART_ScrollContentPresenter"
                                            CanContentScroll="{TemplateBinding CanContentScroll}"
                                            Grid.ColumnSpan="2"
                                            Grid.Row="1" />
                                        <ScrollBar
                                            x:Name="PART_VerticalScrollBar"
                                            Grid.Column="2"
                                            Maximum="{TemplateBinding ScrollableHeight}"
                                            Orientation="Vertical"
                                            Grid.Row="1"
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            ViewportSize="{TemplateBinding ViewportHeight}" />
                                        <Grid
                                            Grid.Column="1"
                                            Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition
                                                    Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition
                                                    Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar
                                                x:Name="PART_HorizontalScrollBar"
                                                Grid.Column="1"
                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                Orientation="Horizontal"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                ViewportSize="{TemplateBinding ViewportWidth}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="IsGrouping"
                        Value="true" />
                    <Condition
                        Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                        Value="false" />
                </MultiTrigger.Conditions>
                <Setter
                    Property="ScrollViewer.CanContentScroll"
                    Value="false" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style
        TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid>
                        <DataGridColumnHeader
                            x:Name="PART_FillerColumnHeader"
                            IsHitTestVisible="False"
                            Background="#FF1D1D1D"
                            Foreground="White"
                            BorderBrush="White" />
                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        TargetType="{x:Type DataGridCell}">
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="Foreground"
            Value="#FFFFFF" />
        <Setter
            Property="BorderThickness"
            Value="0.3" />
        <Setter
            Property="BorderBrush"
            Value="#FFFFFF" />
        <Setter
            Property="Height"
            Value="50" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="TextBlock.TextAlignment"
            Value="Left" />
        <Setter
            Property="TextBlock.VerticalAlignment"
            Value="Top" />
        <Setter
            Property="TextBlock.TextWrapping"
            Value="Wrap" />
        <Style.Triggers>
            <Trigger
                Property="IsSelected"
                Value="True">
                <Setter
                    Property="Background"
                    Value="#373737" />
                <Setter
                    Property="BorderThickness"
                    Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        TargetType="{x:Type DataGridRow}">
        <Setter
            Property="Background"
            Value="#1d1d1d" />
        <Setter
            Property="Foreground"
            Value="#FFFFFF" />
        <Setter
            Property="BorderThickness"
            Value="0.3" />
        <Setter
            Property="BorderBrush"
            Value="#FFFFFF" />
        <Setter
            Property="Height"
            Value="50" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="TextBlock.TextAlignment"
            Value="Center" />
        <Setter
            Property="TextBlock.VerticalAlignment"
            Value="Center" />
        <Setter
            Property="TextBlock.TextWrapping"
            Value="Wrap" />
        <Style.Triggers>
            <EventTrigger
                RoutedEvent="MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(DataGridRow.Background).(SolidColorBrush.Color)">
                                <LinearColorKeyFrame
                                    KeyTime="0:0:0.2"
                                    Value="#2d2d2d" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger
                RoutedEvent="MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(DataGridRow.Background).(SolidColorBrush.Color)">
                                <LinearColorKeyFrame
                                    KeyTime="0:0:0.2"
                                    Value="#1d1d1d" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="ColumnHeaderGripperStyle"
        TargetType="{x:Type Thumb}">
        <Setter
            Property="Width"
            Value="8" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="Cursor"
            Value="SizeWE" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Thumb}">
                    <Border
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        TargetType="{x:Type DataGridColumnHeader}">
        <Setter
            Property="Background"
            Value="#1d1d1d" />
        <Setter
            Property="Foreground"
            Value="#FFFFFF" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="BorderBrush"
            Value="#FFFFFF" />
        <Setter
            Property="Height"
            Value="30" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Themes:DataGridHeaderBorder
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            IsClickable="{TemplateBinding CanUserSort}"
                            IsPressed="{TemplateBinding IsPressed}"
                            IsHovered="{TemplateBinding IsMouseOver}"
                            Padding="{TemplateBinding Padding}"
                            SortDirection="{TemplateBinding SortDirection}"
                            SeparatorBrush="{TemplateBinding SeparatorBrush}"
                            SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Themes:DataGridHeaderBorder>
                        <Thumb
                            x:Name="PART_LeftHeaderGripper"
                            HorizontalAlignment="Left"
                            Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb
                            x:Name="PART_RightHeaderGripper"
                            HorizontalAlignment="Right"
                            Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region DataGridCellDevice-->
    <Style
        x:Key="DataGridCellDevice"
        TargetType="{x:Type DataGridCell}">
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="Foreground"
            Value="#FFFFFF" />
        <Setter
            Property="BorderThickness"
            Value="0.3" />
        <Setter
            Property="BorderBrush"
            Value="#FFFFFF" />
        <Setter
            Property="Height"
            Value="50" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="TextBlock.TextAlignment"
            Value="Center" />
        <Setter
            Property="TextBlock.VerticalAlignment"
            Value="Center" />
        <Setter
            Property="TextBlock.TextWrapping"
            Value="Wrap" />
    </Style>
    <Style
        x:Key="DataGridRowDevice"
        TargetType="{x:Type DataGridRow}">
        <Setter
            Property="Background"
            Value="#1d1d1d" />
        <Setter
            Property="Foreground"
            Value="#FFFFFF" />
        <Setter
            Property="BorderThickness"
            Value="0.3" />
        <Setter
            Property="BorderBrush"
            Value="#FFFFFF" />
        <Setter
            Property="Height"
            Value="50" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="TextBlock.TextAlignment"
            Value="Center" />
        <Setter
            Property="TextBlock.VerticalAlignment"
            Value="Center" />
        <Setter
            Property="TextBlock.TextWrapping"
            Value="Wrap" />
        <Style.Triggers>
            <EventTrigger
                RoutedEvent="MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(DataGridRow.Background).(SolidColorBrush.Color)">
                                <LinearColorKeyFrame
                                    KeyTime="0:0:0.2"
                                    Value="#2d2d2d" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger
                RoutedEvent="MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames
                                Storyboard.TargetProperty="(DataGridRow.Background).(SolidColorBrush.Color)">
                                <LinearColorKeyFrame
                                    KeyTime="0:0:0.2"
                                    Value="#1d1d1d" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#endregion DataGrid-->

    <!--#region Lists-->

    <!--#region ListBox-->
    <SolidColorBrush
        x:Key="ListBox.Static.Background"
        Color="#1d1d1d" />
    <SolidColorBrush
        x:Key="ListBox.Static.Border"
        Color="#FFFFFF" />
    <SolidColorBrush
        x:Key="ListBox.Disabled.Background"
        Color="DarkGray" />
    <SolidColorBrush
        x:Key="ListBox.Disabled.Border"
        Color="#FFD9D9D9" />
    <SolidColorBrush
        x:Key="ListBox.SelectedBrush"
        Color="DarkGoldenrod" />
    <Style
        TargetType="{x:Type ListBox}">
        <Setter
            Property="Background"
            Value="{StaticResource ListBox.Static.Background}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource ListBox.Static.Border}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="ScrollViewer.CanContentScroll"
            Value="true" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="Both" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ListBox}">
                    <Border
                        x:Name="Bd"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="1"
                        SnapsToDevicePixels="true">
                        <ScrollViewer
                            Focusable="false"
                            Padding="{TemplateBinding Padding}"
                            Template="{DynamicResource ScrollViewerControlTemplate1}">
                            <ItemsPresenter
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource ListBox.Disabled.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsGrouping"
                                    Value="true" />
                                <Condition
                                    Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                    Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="ScrollViewer.CanContentScroll"
                                Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate
        x:Key="ScrollViewerControlTemplate1"
        TargetType="{x:Type ScrollViewer}">
        <Grid
            x:Name="Grid"
            Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="*" />
                <RowDefinition
                    Height="Auto" />
            </Grid.RowDefinitions>
            <Rectangle
                x:Name="Corner"
                Grid.Column="1"
                Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                Grid.Row="1" />
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False"
                CanVerticallyScroll="False"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Content="{TemplateBinding Content}"
                Grid.Column="0"
                Margin="{TemplateBinding Padding}"
                Grid.Row="0" />
            <ScrollBar
                x:Name="PART_VerticalScrollBar"
                AutomationProperties.AutomationId="VerticalScrollBar"
                Cursor="Arrow"
                Grid.Column="1"
                Maximum="{TemplateBinding ScrollableHeight}"
                Minimum="0"
                Grid.Row="0"
                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                ViewportSize="{TemplateBinding ViewportHeight}" />
            <ScrollBar
                x:Name="PART_HorizontalScrollBar"
                AutomationProperties.AutomationId="HorizontalScrollBar"
                Cursor="Arrow"
                Grid.Column="0"
                Maximum="{TemplateBinding ScrollableWidth}"
                Minimum="0"
                Orientation="Horizontal"
                Grid.Row="1"
                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                ViewportSize="{TemplateBinding ViewportWidth}" />
        </Grid>
    </ControlTemplate>
    <!--#endregion ListBox-->

    <!--#region ListView-->
    <Style
        TargetType="{x:Type ListView}">
        <Setter
            Property="Background"
            Value="{StaticResource ListBox.Static.Background}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource ListBox.Static.Border}" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter
            Property="ScrollViewer.HorizontalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="ScrollViewer.VerticalScrollBarVisibility"
            Value="Auto" />
        <Setter
            Property="ScrollViewer.CanContentScroll"
            Value="true" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="Both" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ListView}">
                    <Border
                        x:Name="Bd"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="1"
                        SnapsToDevicePixels="true">
                        <ScrollViewer
                            Focusable="false"
                            Padding="{TemplateBinding Padding}"
                            Template="{DynamicResource ScrollViewerControlTemplate1}">
                            <ItemsPresenter
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Background"
                                TargetName="Bd"
                                Value="{StaticResource ListBox.Disabled.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="Bd"
                                Value="{StaticResource ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="IsGrouping"
                                    Value="true" />
                                <Condition
                                    Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                    Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter
                                Property="ScrollViewer.CanContentScroll"
                                Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ListView-->

    <!--#endregion Lists-->

    <!--#region Window-->
    <ControlTemplate
        x:Key="WindowTemplateKey"
        TargetType="{x:Type Window}">
        <Border
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter />
                </AdornerDecorator>
                <ResizeGrip
                    x:Name="WindowResizeGrip"
                    HorizontalAlignment="Right"
                    IsTabStop="false"
                    Visibility="Collapsed"
                    VerticalAlignment="Bottom" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="ResizeMode"
                        Value="CanResizeWithGrip" />
                    <Condition
                        Property="WindowState"
                        Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter
                    Property="Visibility"
                    TargetName="WindowResizeGrip"
                    Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style
        x:Key="WindowStyle"
        TargetType="{x:Type Window}">
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="Foreground"
            Value="White" />
        <Setter
            Property="Background"
            Value="#FF1D1D1D" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Window}">
                    <Border
                        BorderBrush="White"
                        BorderThickness="1"
                        Background="#1d1d1d">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger
                Property="ResizeMode"
                Value="CanResizeWithGrip">
                <Setter
                    Property="Template"
                    Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion Window-->

    <!--#region Menu-->
    <Style
        TargetType="{x:Type Menu}">
        <Setter
            Property="Background"
            Value="{StaticResource DarkBrush}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource WhiteBrush}" />
        <Setter
            Property="BorderThickness"
            Value="0.5" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource GrayBrush}" />
    </Style>
    <!--#endregion MenuItem-->

    <!--#region MenuItem-->
    <SolidColorBrush
        x:Key="MenuItem.Background"
        Color="#1d1d1d" />
    <SolidColorBrush
        x:Key="MenuItem.Foreground"
        Color="#FFFFFF" />
    <Style
        TargetType="{x:Type MenuItem}">
        <Setter
            Property="Background"
            Value="{StaticResource MenuItem.Background}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource MenuItem.Foreground}" />
        <Setter
            Property="BorderThickness"
            Value="0" />
    </Style>
    <!--#endregion MenuItem-->
    
    <!--#region ProgressBar-->
    <Style
        TargetType="ProgressBar">
        <Setter
            Property="Foreground"
            Value="Goldenrod" />
        <Setter
            Property="Background"
            Value="#1d1d1d" />
        <Setter
            Property="BorderBrush"
            Value="DarkGoldenrod" />
        <Setter
            Property="BorderThickness"
            Value="1" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ProgressBar">
                    <Grid
                        x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
                                x:Name="CommonStates">
                                <VisualState
                                    x:Name="Determinate" />
                                <VisualState
                                    x:Name="Indeterminate">
                                    <Storyboard
                                        RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                            Storyboard.TargetName="Animation">
                                            <EasingDoubleKeyFrame
                                                KeyTime="0"
                                                Value="0.25" />
                                            <EasingDoubleKeyFrame
                                                KeyTime="0:0:1"
                                                Value="0.25" />
                                            <EasingDoubleKeyFrame
                                                KeyTime="0:0:2"
                                                Value="0.25" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)"
                                            Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame
                                                KeyTime="0"
                                                Value="-0.5,0.5" />
                                            <EasingPointKeyFrame
                                                KeyTime="0:0:1"
                                                Value="0.5,0.5" />
                                            <EasingPointKeyFrame
                                                KeyTime="0:0:2"
                                                Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                            CornerRadius="2"
                            BorderBrush="#FFFFFF"
                            BorderThickness="0"
                            Background="#1d1d1d" />
                        <Rectangle
                            x:Name="PART_Track" />
                        <Grid
                            x:Name="PART_Indicator"
                            ClipToBounds="true"
                            HorizontalAlignment="Left">
                            <Rectangle
                                x:Name="Indicator"
                                Fill="{TemplateBinding Foreground}" />
                            <Rectangle
                                x:Name="Animation"
                                Fill="{TemplateBinding Foreground}"
                                RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="Orientation"
                            Value="Vertical">
                            <Setter
                                Property="LayoutTransform"
                                TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform
                                        Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger
                            Property="IsIndeterminate"
                            Value="true">
                            <Setter
                                Property="Visibility"
                                TargetName="Indicator"
                                Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

</ResourceDictionary>